name: CI Pipeline
on:
  push:
    branches: [dev]
  pull_request:
    branches: [dev, main]

jobs:
  # Main validation job - runs the actual checks
  validate:
    runs-on: ubuntu-latest
    
    # Set timeout to prevent hanging builds
    timeout-minutes: 10
    
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better git operations

      - name: Python stuff
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.3'
        run: pip install -r requirements.txt
        run: pytest
        
      - name: üîê Check for secrets
        run: |
          # Check for accidentally committed secrets
          if grep -r "OPENAI_API_KEY\|SUPABASE_SERVICE_ROLE\|CLAUDE_CODE_OAUTH" \
            --exclude-dir=node_modules \
            --exclude-dir=.git \
            --exclude-dir=.next \
            --exclude="*.yml" \
            --exclude=".env.example" .; then
            echo "::error::Potential secrets detected in code!"
            echo "::error::Use environment variables instead"
            exit 1
          fi
        if: always()

  # Summary job - provides helpful feedback
  summary:
    runs-on: ubuntu-latest
    needs: [validate, security]
    if: always()
    
    steps:
      - name: üìã CI Summary
        run: |
          echo "## CI Pipeline Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "- Claude will review your code quality automatically" >> $GITHUB_STEP_SUMMARY
          echo "- Mention @claude in comments for specific questions" >> $GITHUB_STEP_SUMMARY
          echo "- Merge when all checks pass" >> $GITHUB_STEP_SUMMARY
          
          # For PRs, add merge readiness
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            if [ "${{ needs.validate.result }}" == "success" ]; then
              echo "### üöÄ Ready to merge!" >> $GITHUB_STEP_SUMMARY
            else
              echo "### üöß Fix issues before merging" >> $GITHUB_STEP_SUMMARY
            fi
          fi

  # Label PRs automatically based on changes
  label-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: üè∑Ô∏è Auto-label PR
        uses: actions/labeler@v4
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
        continue-on-error: true